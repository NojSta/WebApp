openapi: 3.0.1
info:
  title: Destinations API
  version: v1
paths:
  /api/destinations/{destinationId}/reviews/{reviewId}/comments:
    get:
      summary: Get a list of comments
      tags:
        - Comments
      operationId: GetComments
      parameters:
        - name: destinationId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: reviewId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: A list of comments
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CommentDto'
    post:
      summary: Post a comment
      tags:
        - Comments
      operationId: CreateComment
      parameters:
        - name: destinationId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: reviewId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCommentDto'
        required: true
      responses:
        '201':
          description: A comment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentDto'
        '400':
          description: Bad Request
        '404':
          description: Comment Not Found
        '422':
          description: Unprocessable Content
  /api/destinations/{destinationId}/reviews/{reviewId}/comments/{commentId}:
    get:
      summary: Get a comment by ID
      tags:
        - Comments
      operationId: GetCommentById
      parameters:
        - name: destinationId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: reviewId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: commentId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: A comment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentDto'
        '404':
          description: Comment Not Found
    delete:
      summary: Delete a comment by ID
      tags:
        - Comments
      operationId: DeleteComment
      parameters:
        - name: destinationId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: reviewId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: commentId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '204':
          description: Comment deleted
        '404':
          description: Comment Not Found
  /api/destinations/{destinationId}/reviews/{reviewId}/comments/{commentID}:
    put:
      summary: Update a comment by ID
      tags:
        - Comments
      operationId: UpdateComment
      parameters:
        - name: destinationId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: reviewId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: commentID
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCommentDto'
        required: true
      responses:
        '200':
          description: A comment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentDto'
        '400':
          description: Bad Request
        '404':
          description: Comment Not Found
        '422':
          description: Unprocessable Content
  /api/destinations:
    get:
      summary: Get a list of destinations
      tags:
        - Destinations
      operationId: GetDestinations
      responses:
        '200':
          description: A list of destinations
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DestinationDto'
    post:
      summary: Create a destination
      tags:
        - Destinations
      operationId: CreateDestinations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDestinationDto'
        required: true
      responses:
        '201':
          description: A destination
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DestinationDto'
        '400':
          description: Bad Request
        '404':
          description: Destination Not Found
        '422':
          description: Unprocessable Content
  /api/destinations/{destinationId}:
    get:
      summary: Get a destination by ID
      tags:
        - Destinations
      operationId: GetDestinationById
      parameters:
        - name: destinationId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: A destination
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DestinationDto'
        '404':
          description: Destination Not Found
    delete:
      summary: Delete a destination by ID
      tags:
        - Destinations
      operationId: DeleteDestination
      parameters:
        - name: destinationId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '204':
          description: Destination deleted
        '404':
          description: Destination Not Found
  /api/destinations/{destinationID}:
    put:
      summary: Update a destination by ID
      tags:
        - Destinations
      operationId: UpdateDestination
      parameters:
        - name: destinationID
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDestinationDto'
        required: true
      responses:
        '200':
          description: A destination
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DestinationDto'
        '400':
          description: Bad Request
        '404':
          description: Destination Not Found
        '422':
          description: Unprocessable Content
  /api/destinations/{destinationId}/reviews:
    get:
      summary: Get a list of reviews
      tags:
        - Reviews
      operationId: GetReviews
      parameters:
        - name: destinationId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: A list of reviews
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReviewDto'
    post:
      summary: Create a new review
      tags:
        - Reviews
      operationId: CreateReview
      parameters:
        - name: destinationId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateReviewDto'
        required: true
      responses:
        '201':
          description: A review
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewDto'
        '400':
          description: Bad Request
        '404':
          description: Review Not Found
        '422':
          description: Unprocessable Content
  /api/destinations/{destinationId}/reviews/{reviewId}:
    get:
      summary: Get a review by ID
      tags:
        - Reviews
      operationId: GetReviewById
      parameters:
        - name: destinationId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: reviewId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: A review
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewDto'
        '404':
          description: Review Not Found
    delete:
      summary: Delete a review by ID
      tags:
        - Reviews
      operationId: DeleteReview
      parameters:
        - name: destinationId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: reviewId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '204':
          description: Review deleted
        '404':
          description: Review Not Found
  /api/destinations/{destinationId}/reviews/{reviewID}:
    put:
      summary: Update a review by ID
      tags:
        - Reviews
      operationId: UpdateReview
      parameters:
        - name: destinationId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: reviewID
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateReviewDto'
        required: true
      responses:
        '200':
          description: A review
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewDto'
        '400':
          description: Bad Request
        '404':
          description: Review Not Found
        '422':
          description: Unprocessable Content
components:
  schemas:
    CommentDto:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 2
        text:
          type: string
          nullable: true
          example: Good review!
        createdAt:
          type: string
          format: date-time
          example: 2024.10.10
      additionalProperties: false
    CreateCommentDto:
      type: object
      properties:
        text:
          type: string
          nullable: true
          example: Nice experience
      additionalProperties: false
    CreateDestinationDto:
      type: object
      properties:
        name:
          type: string
          nullable: true
          example: Rekyva
        content:
          type: string
          nullable: true
          example: Grazu
      additionalProperties: false
    CreateReviewDto:
      type: object
      properties:
        title:
          type: string
          nullable: true
          example: Long journey
        content:
          type: string
          nullable: true
          example: Enjoyed it
      additionalProperties: false
    DestinationDto:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        name:
          type: string
          nullable: true
          example: Everest
        content:
          type: string
          nullable: true
          example: Big mountain
      additionalProperties: false
    ReviewDto:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        name:
          type: string
          nullable: true
          example: Been there
        content:
          type: string
          nullable: true
          example: Really liked it
        likes:
          type: integer
          format: int32
          example: 2
        rating:
          type: integer
          format: int32
          example: 2
        createdAt:
          type: string
          format: date-time
          example: 2024.10.11
      additionalProperties: false
    UpdateCommentDto:
      type: object
      properties:
        text:
          type: string
          nullable: true
          example: Very nice review
      additionalProperties: false
    UpdateDestinationDto:
      type: object
      properties:
        content:
          type: string
          nullable: true
          example: Very big mountain
      additionalProperties: false
    UpdateReviewDto:
      type: object
      properties:
        title:
          type: string
          nullable: true
          example: Been there
        content:
          type: string
          nullable: true
          example: Really really liked it
      additionalProperties: false
