openapi: 3.0.1
info:
  title: Destinations API
  version: v1
paths:
  /api/destinations/{destinationId}/reviews/{reviewId}/comments:
    get:
      tags:
        - Comments
      operationId: GetComments
      parameters:
        - name: destinationId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: reviewId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CommentDto'
    post:
      tags:
        - Comments
      operationId: CreateComment
      parameters:
        - name: destinationId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: reviewId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCommentDto'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentDto'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: string
        '404':
          description: Not Found
        '422':
          description: Client Error
          content:
            application/json:
              schema:
                type: string
  /api/destinations/{destinationId}/reviews/{reviewId}/comments/{commentId}:
    get:
      tags:
        - Comments
      operationId: GetCommentById
      parameters:
        - name: destinationId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: reviewId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: commentId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentDto'
        '404':
          description: Not Found
    delete:
      tags:
        - Comments
      operationId: DeleteComment
      parameters:
        - name: destinationId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: reviewId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: commentId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
  /api/destinations/{destinationId}/reviews/{reviewId}/comments/{commentID}:
    put:
      tags:
        - Comments
      operationId: UpdateComment
      parameters:
        - name: destinationId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: reviewId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: commentID
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCommentDto'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentDto'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: string
        '404':
          description: Not Found
        '422':
          description: Client Error
          content:
            application/json:
              schema:
                type: string
  /api/destinations:
    get:
      tags:
        - Destinations
      operationId: GetDestinations
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DestinationDto'
    post:
      tags:
        - Destinations
      operationId: CreateDestinations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDestinationDto'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DestinationDto'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: string
        '404':
          description: Not Found
        '422':
          description: Client Error
          content:
            application/json:
              schema:
                type: string
  /api/destinations/{destinationId}:
    get:
      tags:
        - Destinations
      operationId: GetDestinationById
      parameters:
        - name: destinationId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DestinationDto'
        '404':
          description: Not Found
    delete:
      tags:
        - Destinations
      operationId: DeleteDestination
      parameters:
        - name: destinationId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
  /api/destinations/{destinationID}:
    put:
      tags:
        - Destinations
      operationId: UpdateDestination
      parameters:
        - name: destinationID
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDestinationDto'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DestinationDto'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: string
        '404':
          description: Not Found
        '422':
          description: Client Error
          content:
            application/json:
              schema:
                type: string
  /api/destinations/{destinationId}/reviews:
    get:
      tags:
        - Reviews
      operationId: GetReviews
      parameters:
        - name: destinationId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReviewDto'
    post:
      tags:
        - Reviews
      operationId: CreateReview
      parameters:
        - name: destinationId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateReviewDto'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewDto'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: string
        '404':
          description: Not Found
        '422':
          description: Client Error
          content:
            application/json:
              schema:
                type: string
  /api/destinations/{destinationId}/reviews/{reviewId}:
    get:
      tags:
        - Reviews
      operationId: GetReviewById
      parameters:
        - name: destinationId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: reviewId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewDto'
        '404':
          description: Not Found
    delete:
      tags:
        - Reviews
      operationId: DeleteReview
      parameters:
        - name: destinationId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: reviewId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
  /api/destinations/{destinationId}/reviews/{reviewID}:
    put:
      tags:
        - Reviews
      operationId: UpdateReview
      parameters:
        - name: destinationId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: reviewID
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateReviewDto'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewDto'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: string
        '404':
          description: Not Found
        '422':
          description: Client Error
          content:
            application/json:
              schema:
                type: string
components:
  schemas:
    CommentDto:
      type: object
      properties:
        id:
          type: integer
          format: int32
        text:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
      additionalProperties: false
    CreateCommentDto:
      type: object
      properties:
        text:
          type: string
          nullable: true
      additionalProperties: false
    CreateDestinationDto:
      type: object
      properties:
        name:
          type: string
          nullable: true
        content:
          type: string
          nullable: true
      additionalProperties: false
    CreateReviewDto:
      type: object
      properties:
        title:
          type: string
          nullable: true
        content:
          type: string
          nullable: true
      additionalProperties: false
    DestinationDto:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        content:
          type: string
          nullable: true
      additionalProperties: false
    ReviewDto:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        content:
          type: string
          nullable: true
        likes:
          type: integer
          format: int32
        rating:
          type: integer
          format: int32
        createdAt:
          type: string
          format: date-time
      additionalProperties: false
    UpdateCommentDto:
      type: object
      properties:
        text:
          type: string
          nullable: true
      additionalProperties: false
    UpdateDestinationDto:
      type: object
      properties:
        content:
          type: string
          nullable: true
      additionalProperties: false
    UpdateReviewDto:
      type: object
      properties:
        title:
          type: string
          nullable: true
        content:
          type: string
          nullable: true
      additionalProperties: false
